version: '3.7'

services:
  service.advertise.ssdp:
    container_name: "service.advertise.ssdp"
    build:
      dockerfile: Dockerfile
      context: ./service.advertise.ssdp
    network_mode: host

  service.api-gateway:
    container_name: "service.api-gateway"
    build:
     dockerfile: service.api-gateway/Dockerfile
     context: .
    ports:
      - 4000:4000

  service.device-registry:
    container_name: "service.device-registry"
    restart: always
    build:
      dockerfile: service.device-registry/Dockerfile
      context: .
    ports:
      - 4001:4001
    depends_on:
      - service.device-registry.database

  service.device-registry.database:
    image: postgres:latest
    container_name: "service.device-registry.database"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=zuhkiz-2honwu-semhoV
      - POSTGRES_DB=service.device-registry.database
    ports:
      - 5432:5432
    volumes:
      - ./service.device-registry/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - service.device-registry.database.data:/var/lib/postgresql/data

  service.controller.sonoff:
    container_name: "service.controller.sonoff"
    build:
      dockerfile: service.controller.sonoff/Dockerfile
      context: .
    ports:
      - 4002:4002
    depends_on:
      - service.device-registry
      
#  service.controller.sonos:
#    container_name: "service.controller.sonos"
#    build:
#      dockerfile: service.controller.sonos/Dockerfile
#      context: .
#    ports:
#      - 4003:4003
#    depends_on:
#      - service.device-registry

  service.controller.aurora:
    container_name: "service.controller.aurora"
    build:
      dockerfile: service.controller.aurora/Dockerfile
      context: .
    ports:
      - 4004:4004
    depends_on:
      - service.device-registry


volumes:
  service.device-registry.database.data: